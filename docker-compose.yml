version: '1.0'

services:
  api-gateway:
    container_name: gateway
    build: ./api-gateway
    depends_on:
      - auth-service
      - delivery-service
    ports:
      - "8081:8081"
    networks:
      - delivery
    volumes:
      - ./api-gateway:/home/mubina/go/src/gitlab.com/food/api-gateway

  auth-service:
    container_name: auth_service
    build: ./auth
    depends_on: 
      - postgres-db
      - delivery-service
      - kafka
      - redis
      - zookeeper
    ports:
      - "8080:8080"
    networks:
      - delivery

  delivery-service:
    container_name: delivery_service
    build: ./product
    depends_on:
      - postgres-db1
    ports:
      - "8085:8085"
    networks:
      - delivery
    
  postgres-db:
    container_name: postgres_db
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
      POSTGRES_DB: auth
    volumes:
     - postgres_data:/data/postgres
    ports:
      - "5555:5432"
    networks:
      - delivery
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d users"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres-db1:
    container_name: postgres_pr
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      PGDATA: /data/postgres
      POSTGRES_DB: product
    volumes:
     - postgres_data:/data/postgres
    ports:
      - "5835:5432"
    networks:
      - delivery
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d product"]
      interval: 30s
      timeout: 10s
      retries: 5

  migrate:
    image: migrate/migrate
    networks: 
      - delivery
    volumes:
      - ./auth/migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://postgres:1234@postgres_db:5432/auth?sslmode=disable", "up" ]
    depends_on:
      - postgres-db

  migrate1:
    image: migrate/migrate
    networks: 
      - delivery
    volumes:
      - ./product/migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://postgres:1234@postgres_pr:5432/product?sslmode=disable", "up" ]
    depends_on:
      - postgres-db1

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2281:2181
    networks:
      - delivery

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 2092:29092
    networks:
      - delivery
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6480:6380"
    networks:
      - delivery

networks:
  delivery:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:    