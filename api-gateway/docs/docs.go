// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/cart": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API updates an existing cart.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "UPDATE cart",
                "parameters": [
                    {
                        "description": "Cart data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateCartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a new cart.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "CREATE cart",
                "parameters": [
                    {
                        "description": "Cart data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateCartReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/cart/all": {
            "get": {
                "description": "Retrieve all carts with optional filters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "GET all carts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quantity",
                        "name": "quantity",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllCartsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/cart/{id}": {
            "get": {
                "description": "Retrieve a specific cart by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "GET cart by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Cart"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API deletes a cart by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cart"
                ],
                "summary": "DELETE cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cart ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-location": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API updates a courier location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierLocation"
                ],
                "summary": "UPDATE courier location",
                "parameters": [
                    {
                        "description": "Courier Location",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateCourierLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a courier location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierLocation"
                ],
                "summary": "CREATE courier location",
                "parameters": [
                    {
                        "description": "Courier Location",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateCourierLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-location/all": {
            "get": {
                "description": "This API retrieves all courier locations with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierLocation"
                ],
                "summary": "GET all courier locations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllCourierLocationsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-location/by-time-range": {
            "get": {
                "description": "This API retrieves courier locations within a specific time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierLocation"
                ],
                "summary": "GET courier locations by time range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "courier_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start Time",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End Time",
                        "name": "end_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetCourierLocationsByTimeRangeRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-location/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API updates the status of a courier location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierLocation"
                ],
                "summary": "UPDATE courier location status",
                "parameters": [
                    {
                        "description": "Courier Location Status",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateCourierLocationStatusReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/courier-location/{id}": {
            "get": {
                "description": "This API retrieves a courier location by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CourierLocation"
                ],
                "summary": "GET courier location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.CourierLocation"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notification": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "CREATE notification",
                "parameters": [
                    {
                        "description": "Notification",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateNotificationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notification/all": {
            "get": {
                "description": "This API retrieves all notifications with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "GET all notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllNotificationsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notification/read": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API marks a notification as read",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "MARK notification as read",
                "parameters": [
                    {
                        "description": "Notification",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.MarkNotificationAsReadReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/notification/{id}": {
            "get": {
                "description": "This API retrieves a notification by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "GET notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Notification"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API updates an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "UPDATE order",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateOrderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "CREATE order",
                "parameters": [
                    {
                        "description": "Order",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateOrderReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order-item": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API updates an order item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "UPDATE order item",
                "parameters": [
                    {
                        "description": "Order Item",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateOrderItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This API creates an order item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "CREATE order item",
                "parameters": [
                    {
                        "description": "Order Item",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateOrderItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order-item/all": {
            "get": {
                "description": "This API retrieves all order items with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "GET all order items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllOrderItemsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order-item/order": {
            "get": {
                "description": "This API retrieves order items by order ID with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "GET order items by order ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllOrderItemsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order-item/product": {
            "get": {
                "description": "This API retrieves order items by product ID with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "GET order items by product ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllOrderItemsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order-item/{id}": {
            "get": {
                "description": "This API retrieves an order item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderItem"
                ],
                "summary": "GET order item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.OrderItem"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/all": {
            "get": {
                "description": "This API retrieves all orders with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "GET all orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Delivery Address",
                        "name": "delivery_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Total Amount",
                        "name": "total_amount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllOrderRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/history": {
            "get": {
                "description": "This API retrieves an order history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "GET order history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetCourierOrderHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/order/{id}": {
            "get": {
                "description": "This API retrieves an order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "GET order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Order"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API deletes an order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "DELETE order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/orders/paid": {
            "post": {
                "description": "Deducts the product price from the user's cart and checks if the transaction is valid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Pay for an order",
                "parameters": [
                    {
                        "description": "Paid Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.PaidReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.PaidRes"
                        }
                    },
                    "400": {
                        "description": "message\":\"error while paid checkout",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "description": "Get a list of all products with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllProductsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a product with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new product with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/product/search": {
            "get": {
                "description": "Search for products with filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Search products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Product Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Product Price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllProductsRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/product/{id}": {
            "get": {
                "description": "Get a product's details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get a product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Product"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a product by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/task": {
            "put": {
                "description": "This API updates a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Update a task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.UpdateTaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "This API creates a new task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Task",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product.CreatetaskReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/task/all": {
            "get": {
                "description": "This API retrieves all tasks with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get all tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Task Date",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllTasksRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/task/search": {
            "get": {
                "description": "This API searches tasks based on filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Search tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllTasksRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/task/user": {
            "get": {
                "description": "This API retrieves tasks assigned to a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get tasks by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID assigned to",
                        "name": "user_id_assigned_to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.GetAllTasksRes"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/task/{id}": {
            "get": {
                "description": "This API retrieves a task by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/product.Task"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This API deletes a task by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Delete a task by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error\": \"error message",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/minio/upload": {
            "post": {
                "description": "Upload a file to MinIO",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinIO"
                ],
                "summary": "Upload a file to MinIO",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filename",
                        "name": "filename",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "product.Cart": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "options": {
                    "type": "string"
                },
                "product_id": {
                    "$ref": "#/definitions/product.Product"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.CourierLocation": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "product.CreateCartReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "options": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.CreateCourierLocationRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "product.CreateNotificationReq": {
            "type": "object",
            "properties": {
                "is_read": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.CreateOrderItemRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "product.CreateOrderReq": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "delivery_address": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.CreateProductRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "product.CreatetaskReq": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id_assigned_to": {
                    "type": "integer"
                }
            }
        },
        "product.GetAllCartsRes": {
            "type": "object",
            "properties": {
                "carts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Cart"
                    }
                }
            }
        },
        "product.GetAllCourierLocationsRes": {
            "type": "object",
            "properties": {
                "courier_locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.CourierLocation"
                    }
                }
            }
        },
        "product.GetAllNotificationsRes": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Notification"
                    }
                }
            }
        },
        "product.GetAllOrderItemsRes": {
            "type": "object",
            "properties": {
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.OrderItem"
                    }
                }
            }
        },
        "product.GetAllOrderRes": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Order"
                    }
                }
            }
        },
        "product.GetAllProductsRes": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Product"
                    }
                }
            }
        },
        "product.GetAllTasksRes": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Task"
                    }
                }
            }
        },
        "product.GetCourierLocationsByTimeRangeRes": {
            "type": "object",
            "properties": {
                "courier_locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.CourierLocation"
                    }
                }
            }
        },
        "product.GetCourierOrderHistoryResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product.Order"
                    }
                }
            }
        },
        "product.MarkNotificationAsReadReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_read": {
                    "type": "boolean"
                }
            }
        },
        "product.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_read": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.Order": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.OrderItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "$ref": "#/definitions/product.Order"
                },
                "order_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product": {
                    "$ref": "#/definitions/product.Product"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "product.PaidReq": {
            "type": "object",
            "properties": {
                "cart_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.PaidRes": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "product.Product": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "product.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id_assigned_to": {
                    "type": "integer"
                }
            }
        },
        "product.UpdateCartReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "options": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.UpdateCourierLocationRequest": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "product.UpdateCourierLocationStatusReq": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "product.UpdateOrderItemRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "product.UpdateOrderReq": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                },
                "delivery_address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "total_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "product.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "product.UpdateTaskReq": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id_assigned_to": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Example API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
